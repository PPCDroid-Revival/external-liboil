
pkgincludedir = $(includedir)/liboil-@LIBOIL_MAJORMINOR@/liboil

if HAVE_GCC_I386
subdir_i386 = i386
libs_i386 = i386/libi386.la
if HAVE_MMX_INTRINSICS
subdir_i386 += fb
libs_i386 += fb/libfb.la
endif
if HAVE_MMX_INTRINSICS
#subdir_i386 += mmx
#libs_i386 += mmx/libmmx.la
endif
if HAVE_SSE_INTRINSICS
subdir_i386 += sse
libs_i386 += sse/libsse.la
endif
if HAVE_3DNOW_INTRINSICS
#subdir_i386 += 3dnow
#libs_i386 += 3dnow/lib3dnow.la
endif
else
subdir_i386 =
libs_i386 =
endif

if HAVE_GCC_POWERPC
subdir_powerpc = powerpc motovec
libs_powerpc = powerpc/libpowerpc.la motovec/libmotovec.la
if HAVE_ASM_BLOCKS
subdir_powerpc += powerpc_asm_blocks
libs_powerpc += powerpc/libpowerpc_asm_blocks.la
endif
else
subdir_powerpc =
libs_powerpc = 
endif


DIST_SUBDIRS = 3dnow c colorspace conv copy dct fb i386 jpeg math md5 mmx motovec powerpc powerpc_asm_blocks ref simdpack sse utf8 
SUBDIRS = c colorspace conv copy dct $(subdir_i386) jpeg math md5 $(subdir_powerpc) ref simdpack utf8 

lib_LTLIBRARIES = liboil-@LIBOIL_MAJORMINOR@.la

buildnoinstdir = $(libdir)
buildnoinst_LTLIBRARIES = liboiltmp1.la

noinst_LTLIBRARIES = liboilfunctions.la

noinst_PROGRAMS = build_prototypes build_prototypes_doc build_marshal \
	build_class_decls

pkginclude_HEADERS = liboil.h liboilfunction.h liboildebug.h liboilfuncs.h \
	liboiltypes.h liboilcpu.h liboilprototype.h liboilparameter.h \
	liboilrandom.h liboilgcc.h liboiltest.h liboilprofile.h \
	liboilinternal.h liboilclasses.h liboil-stdint.h

if ENABLE_GTK_DOC
nodist_noinst_HEADERS = liboilfuncs-doc.h
else
nodist_noinst_HEADERS = 
endif

CLEANFILES = liboilarray.c liboilfuncs-doc.h

liboilfunctions_la_SOURCES = \
	null.c
liboilfunctions_la_CFLAGS = $(LIBOIL_CFLAGS)
liboilfunctions_la_LIBADD = \
	c/lib_c.la \
	conv/libconv.la \
	colorspace/libcolorspace.la \
	copy/libcopy.la \
	dct/libdct.la \
	$(libs_i386) \
	jpeg/libjpeg.la \
	math/libmath.la \
	md5/libmd5.la \
	$(libs_powerpc) \
	ref/libref.la \
	simdpack/libsimdpack.la \
	utf8/libutf8.la
liboilfunctions_la_LDFLAGS = \
	-no-undefined

liboiltmp1_la_SOURCES =
liboiltmp1_la_LDFLAGS = \
	-no-undefined \
	-export-symbols-regex 'oil_'
liboiltmp1_la_LIBADD = \
	liboilfunctions.la \
	$(LIBM)

liboil_@LIBOIL_MAJORMINOR@_la_SOURCES = \
	liboil.h \
	liboildebug.h \
	liboilfuncs.h \
	liboilfunction.h \
	liboilprofile.h \
	liboiltypes.h \
	liboilcolorspace.h \
	liboilfunction.c \
	liboildebug.c \
	liboilcpu.c \
	liboilprofile.c \
	liboilprototype.c \
	liboilarray.c \
	liboiltest.h \
	liboiltest.c \
	liboilmarshal.c
liboil_@LIBOIL_MAJORMINOR@_la_LIBADD = \
	liboilfunctions.la \
	$(LIBM)
liboil_@LIBOIL_MAJORMINOR@_la_CFLAGS = $(LIBOIL_CFLAGS)
liboil_@LIBOIL_MAJORMINOR@_la_LDFLAGS = \
	-no-undefined \
	-version-info $(LIBOIL_LIBVERSION) \
	-export-symbols-regex '^oil_'

# This is required to use 'make -j2'. Automake doesn't seem to notice
# that one of the dependencies is in this directory.
build_prototypes_DEPENDENCIES = liboil-$(LIBOIL_MAJORMINOR).la
build_prototypes_SOURCES = build_prototypes.c
build_prototypes_CFLAGS = $(LIBOIL_CFLAGS)
build_prototypes_LDADD = $(LIBOIL_LIBS)

build_class_decls_DEPENDENCIES = liboil-$(LIBOIL_MAJORMINOR).la
build_class_decls_SOURCES = build_class_decls.c
build_class_decls_CFLAGS = $(LIBOIL_CFLAGS)
build_class_decls_LDADD = $(LIBOIL_LIBS)

build_prototypes_doc_DEPENDENCIES = liboil-$(LIBOIL_MAJORMINOR).la
build_prototypes_doc_SOURCES = build_prototypes_doc.c
build_prototypes_doc_CFLAGS = $(LIBOIL_CFLAGS)
build_prototypes_doc_LDADD = $(LIBOIL_LIBS)

build_marshal_DEPENDENCIES = liboil-$(LIBOIL_MAJORMINOR).la
build_marshal_SOURCES = build_marshal.c
build_marshal_CFLAGS = $(LIBOIL_CFLAGS)
build_marshal_LDADD = $(LIBOIL_LIBS)

liboilarray.c: liboiltmp1.la Makefile
	echo '/* This file is autogenerated.  Do not edit */' >liboilarray.c.tmp
	echo >>liboilarray.c.tmp
	echo '#include <liboil/liboilfunction.h>' >>liboilarray.c.tmp
	echo >>liboilarray.c.tmp
	grep '^_oil_function_class_' .libs/liboiltmp1.exp | \
	  sed -e 's/ .*//' -e 's/.*/extern OilFunctionClass &;/' >>liboilarray.c.tmp
	echo >>liboilarray.c.tmp
	echo 'OilFunctionClass *_oil_function_class_array[] = {' >>liboilarray.c.tmp
	grep '^_oil_function_class_' .libs/liboiltmp1.exp | \
	  sed -e 's/ .*//' -e 's/.*/  \&&,/' >>liboilarray.c.tmp
	echo '  NULL' >>liboilarray.c.tmp
	echo '};' >>liboilarray.c.tmp
	echo >>liboilarray.c.tmp
	grep '^_oil_function_impl_' .libs/liboiltmp1.exp | \
	  sed -e 's/ .*//' -e 's/.*/extern OilFunctionImpl &;/' >>liboilarray.c.tmp
	echo >>liboilarray.c.tmp
	echo 'OilFunctionImpl *_oil_function_impl_array[] = {' >>liboilarray.c.tmp
	grep '^_oil_function_impl_' .libs/liboiltmp1.exp | \
	  sed -e 's/ .*//' -e 's/.*/  \&&,/' >>liboilarray.c.tmp
	echo '  NULL' >>liboilarray.c.tmp
	echo '};' >>liboilarray.c.tmp
	echo >>liboilarray.c.tmp
	cmp liboilarray.c.tmp liboilarray.c || mv liboilarray.c.tmp liboilarray.c

liboilfuncs.h:
	./build_prototypes$(EXEEXT) >liboilfuncs.h

liboilmarshal.c:
	./build_marshal$(EXEEXT) >liboilmarshal.c

liboilfuncs-doc.h:
	./build_prototypes_doc$(EXEEXT) >liboilfuncs-doc.h

update: build_prototypes$(EXEEXT) build_marshal$(EXEEXT) build_prototypes_doc$(EXEEXT) build_class_decls$(EXEEXT)
	./build_prototypes$(EXEEXT) >liboilfuncs.h
	./build_marshal$(EXEEXT) >liboilmarshal.c
	./build_prototypes_doc$(EXEEXT) >liboilfuncs-doc.h
	./build_class_decls$(EXEEXT) >liboilclasses.h

install-buildnoinstLTLIBRARIES:

