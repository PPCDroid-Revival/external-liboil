<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"
>
<refentry id="liboil-liboilprofile">
<refmeta>
<refentrytitle>liboilprofile</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBOIL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>liboilprofile</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="OIL-PROFILE-HIST-LENGTH:CAPS">OIL_PROFILE_HIST_LENGTH</link>
            <link linkend="OilProfile">OilProfile</link>;
#define     <link linkend="oil-profile-stamp">oil_profile_stamp</link>               ()
unsigned <link linkend="long">long</link> <link linkend="oil-profile-stamp-gtod">oil_profile_stamp_gtod</link>        (void);
<link linkend="void">void</link>        <link linkend="oil-profile-init">oil_profile_init</link>                (<link linkend="OilProfile">OilProfile</link> *prof);
<link linkend="void">void</link>        <link linkend="oil-profile-stop-handle">oil_profile_stop_handle</link>         (<link linkend="OilProfile">OilProfile</link> *prof);
<link linkend="void">void</link>        <link linkend="oil-profile-get-ave-std">oil_profile_get_ave_std</link>         (<link linkend="OilProfile">OilProfile</link> *prof,
                                             <link linkend="double">double</link> *ave_p,
                                             <link linkend="double">double</link> *std_p);
#define     <link linkend="oil-profile-start">oil_profile_start</link>               (x)
#define     <link linkend="oil-profile-stop">oil_profile_stop</link>                (x)
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="OIL-PROFILE-HIST-LENGTH:CAPS"/>OIL_PROFILE_HIST_LENGTH</title>
<indexterm><primary>OIL_PROFILE_HIST_LENGTH</primary></indexterm><programlisting>#define OIL_PROFILE_HIST_LENGTH 10
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="OilProfile"/>OilProfile</title>
<indexterm><primary>OilProfile</primary></indexterm><programlisting>typedef struct {
  unsigned long start;
  unsigned long stop;
  unsigned long min;
  unsigned long last;
  unsigned long total;
  int n;

  int hist_n;
  unsigned long hist_time[OIL_PROFILE_HIST_LENGTH];
  int hist_count[OIL_PROFILE_HIST_LENGTH];
} OilProfile;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="oil-profile-stamp"/>oil_profile_stamp()</title>
<indexterm><primary>oil_profile_stamp</primary></indexterm><programlisting>#define oil_profile_stamp() oil_profile_stamp_gtod()
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="oil-profile-stamp-gtod"/>oil_profile_stamp_gtod ()</title>
<indexterm><primary>oil_profile_stamp_gtod</primary></indexterm><programlisting>unsigned <link linkend="long">long</link> oil_profile_stamp_gtod        (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-profile-init"/>oil_profile_init ()</title>
<indexterm><primary>oil_profile_init</primary></indexterm><programlisting><link linkend="void">void</link>        oil_profile_init                (<link linkend="OilProfile">OilProfile</link> *prof);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>prof</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-profile-stop-handle"/>oil_profile_stop_handle ()</title>
<indexterm><primary>oil_profile_stop_handle</primary></indexterm><programlisting><link linkend="void">void</link>        oil_profile_stop_handle         (<link linkend="OilProfile">OilProfile</link> *prof);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>prof</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-profile-get-ave-std"/>oil_profile_get_ave_std ()</title>
<indexterm><primary>oil_profile_get_ave_std</primary></indexterm><programlisting><link linkend="void">void</link>        oil_profile_get_ave_std         (<link linkend="OilProfile">OilProfile</link> *prof,
                                             <link linkend="double">double</link> *ave_p,
                                             <link linkend="double">double</link> *std_p);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>prof</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ave_p</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>std_p</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-profile-start"/>oil_profile_start()</title>
<indexterm><primary>oil_profile_start</primary></indexterm><programlisting>#define     oil_profile_start(x)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-profile-stop"/>oil_profile_stop()</title>
<indexterm><primary>oil_profile_stop</primary></indexterm><programlisting>#define     oil_profile_stop(x)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
