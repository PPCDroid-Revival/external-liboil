<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"
>
<refentry id="liboil-liboilprototype">
<refmeta>
<refentrytitle>liboilprototype</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBOIL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>liboilprototype</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



            <link linkend="OilPrototype">OilPrototype</link>;
<link linkend="OilPrototype">OilPrototype</link>* <link linkend="oil-prototype-from-string">oil_prototype_from_string</link>     (const <link linkend="char">char</link> *s);
<link linkend="char">char</link>*       <link linkend="oil-prototype-to-string">oil_prototype_to_string</link>         (<link linkend="OilPrototype">OilPrototype</link> *proto);
<link linkend="void">void</link>        <link linkend="oil-prototype-free">oil_prototype_free</link>              (<link linkend="OilPrototype">OilPrototype</link> *proto);
<link linkend="void">void</link>        <link linkend="oil-prototype-append-param">oil_prototype_append_param</link>      (<link linkend="OilPrototype">OilPrototype</link> *proto,
                                             <link linkend="OilParameter">OilParameter</link> *param);
<link linkend="int">int</link>         <link linkend="oil-type-sizeof">oil_type_sizeof</link>                 (<link linkend="OilType">OilType</link> type);
const <link linkend="char">char</link>* <link linkend="oil-type-name">oil_type_name</link>                   (<link linkend="OilType">OilType</link> type);
const <link linkend="char">char</link>* <link linkend="oil-arg-type-name">oil_arg_type_name</link>               (<link linkend="OilArgType">OilArgType</link> type);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="OilPrototype"/>OilPrototype</title>
<indexterm><primary>OilPrototype</primary></indexterm><programlisting>typedef struct {
  int n_params;
  OilParameter *params;
  OilFunctionClass *klass;
} OilPrototype;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="oil-prototype-from-string"/>oil_prototype_from_string ()</title>
<indexterm><primary>oil_prototype_from_string</primary></indexterm><programlisting><link linkend="OilPrototype">OilPrototype</link>* oil_prototype_from_string     (const <link linkend="char">char</link> *s);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>s</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-prototype-to-string"/>oil_prototype_to_string ()</title>
<indexterm><primary>oil_prototype_to_string</primary></indexterm><programlisting><link linkend="char">char</link>*       oil_prototype_to_string         (<link linkend="OilPrototype">OilPrototype</link> *proto);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>proto</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-prototype-free"/>oil_prototype_free ()</title>
<indexterm><primary>oil_prototype_free</primary></indexterm><programlisting><link linkend="void">void</link>        oil_prototype_free              (<link linkend="OilPrototype">OilPrototype</link> *proto);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>proto</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-prototype-append-param"/>oil_prototype_append_param ()</title>
<indexterm><primary>oil_prototype_append_param</primary></indexterm><programlisting><link linkend="void">void</link>        oil_prototype_append_param      (<link linkend="OilPrototype">OilPrototype</link> *proto,
                                             <link linkend="OilParameter">OilParameter</link> *param);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>proto</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>param</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-type-sizeof"/>oil_type_sizeof ()</title>
<indexterm><primary>oil_type_sizeof</primary></indexterm><programlisting><link linkend="int">int</link>         oil_type_sizeof                 (<link linkend="OilType">OilType</link> type);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-type-name"/>oil_type_name ()</title>
<indexterm><primary>oil_type_name</primary></indexterm><programlisting>const <link linkend="char">char</link>* oil_type_name                   (<link linkend="OilType">OilType</link> type);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="oil-arg-type-name"/>oil_arg_type_name ()</title>
<indexterm><primary>oil_arg_type_name</primary></indexterm><programlisting>const <link linkend="char">char</link>* oil_arg_type_name               (<link linkend="OilArgType">OilArgType</link> type);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
